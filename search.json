[{"path":"https://cedrichk.github.io/ComplementDNASeq/articles/using-complementdnaseq.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using ComplementDNASeq","text":"ComplementDNASeq provides simple utility compute reverse complement DNA sequences. vignette walks typical usage patterns discusses package validates input.","code":""},{"path":"https://cedrichk.github.io/ComplementDNASeq/articles/using-complementdnaseq.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Using ComplementDNASeq","text":"package can installed GitHub using remotes:","code":"# install.packages(\"remotes\") remotes::install_github(\"CEDRICHK/ComplementDNASeq\")"},{"path":"https://cedrichk.github.io/ComplementDNASeq/articles/using-complementdnaseq.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Using ComplementDNASeq","text":"Load package call reverse_complement() DNA sequence composed , C, G, T. function returns reverse complement sequence, flipping order swapping nucleotide complement (↔︎ T, C ↔︎ G).","code":"library(ComplementDNASeq) reverse_complement(\"GATTACA\") #> [1] \"TGTAATC\""},{"path":"https://cedrichk.github.io/ComplementDNASeq/articles/using-complementdnaseq.html","id":"handling-invalid-input","dir":"Articles","previous_headings":"","what":"Handling invalid input","title":"Using ComplementDNASeq","text":"input contains characters standard nucleotides, function raises error prevent ambiguous results. Missing values propagated unchanged function can safely used vectors may contain NA entries.","code":"reverse_complement(\"GATUACA\") #> Error in reverse_complement(\"GATUACA\"): `seq` may only contain the characters A, C, G, and T. reverse_complement(NA_character_) #> [1] NA"},{"path":"https://cedrichk.github.io/ComplementDNASeq/articles/using-complementdnaseq.html","id":"working-with-vectors","dir":"Articles","previous_headings":"","what":"Working with vectors","title":"Using ComplementDNASeq","text":"reverse_complement() operates single sequence time. vector sequences, combine vectorised helpers vapply(). helper ensures element processed individually returning character vector matching length.","code":"seqs <- c(\"ACTG\", \"TTTT\", \"CGCG\") vapply(seqs, reverse_complement, character(1)) #>   ACTG   TTTT   CGCG  #> \"CAGT\" \"AAAA\" \"CGCG\""},{"path":"https://cedrichk.github.io/ComplementDNASeq/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cedric Hassen-Khodja. Author, maintainer.","code":""},{"path":"https://cedrichk.github.io/ComplementDNASeq/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hassen-Khodja C (2025). ComplementDNASeq: Reverse Complement DNA Sequences. R package version 0.1.0, https://github.com/CEDRICHK/ComplementDNASeq.","code":"@Manual{,   title = {ComplementDNASeq: Reverse Complement DNA Sequences},   author = {Cedric Hassen-Khodja},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/CEDRICHK/ComplementDNASeq}, }"},{"path":"https://cedrichk.github.io/ComplementDNASeq/index.html","id":"complementdnaseq","dir":"","previous_headings":"","what":"ComplementDNASeq","title":"ComplementDNASeq","text":"ComplementDNASeq provides small set utilities working DNA sequences, starting robust implementation reverse-complement helper. package normalises input, validates characters, returns expected Watson–Crick pairing common workflows.","code":""},{"path":"https://cedrichk.github.io/ComplementDNASeq/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ComplementDNASeq","text":"can install development version ComplementDNASeq GitHub : Alternatively, clone repository locally run devtools::load_all() developing.","code":"# install.packages(\"devtools\") devtools::install_github(\"cedrichk/ComplementDNASeq\")"},{"path":"https://cedrichk.github.io/ComplementDNASeq/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"ComplementDNASeq","text":"exported reverse_complement() function returns reverse complement DNA sequence enforcing /C/G/T input. Lowercase input accepted uppercased automatically.","code":"library(ComplementDNASeq)  reverse_complement(\"GATTACA\") #> [1] \"TGTAATC\" #> [1] \"TGTAATC\" reverse_complement(\"acgt\") #> [1] \"ACGT\" #> [1] \"ACGT\""},{"path":"https://cedrichk.github.io/ComplementDNASeq/index.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"ComplementDNASeq","text":"ComplementDNASeq uses testthat framework. can execute test suite : Make sure development dependencies (testthat, waldo, recent pkgload) installed running tests.","code":"devtools::test()"},{"path":"https://cedrichk.github.io/ComplementDNASeq/reference/reverse_complement.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse complement a DNA sequence — reverse_complement","title":"Reverse complement a DNA sequence — reverse_complement","text":"Converts DNA sequence reverse complement using mapping <-> T C <-> G.","code":""},{"path":"https://cedrichk.github.io/ComplementDNASeq/reference/reverse_complement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse complement a DNA sequence — reverse_complement","text":"","code":"reverse_complement(seq)"},{"path":"https://cedrichk.github.io/ComplementDNASeq/reference/reverse_complement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse complement a DNA sequence — reverse_complement","text":"seq character string representing DNA sequence composed , C, G, T.","code":""},{"path":"https://cedrichk.github.io/ComplementDNASeq/reference/reverse_complement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse complement a DNA sequence — reverse_complement","text":"character string containing reverse complement seq.","code":""},{"path":"https://cedrichk.github.io/ComplementDNASeq/reference/reverse_complement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse complement a DNA sequence — reverse_complement","text":"","code":"reverse_complement(\"ACGT\") #> [1] \"ACGT\" reverse_complement(\"GATTACA\") #> [1] \"TGTAATC\""},{"path":"https://cedrichk.github.io/ComplementDNASeq/news/index.html","id":"complementdnaseq-010","dir":"Changelog","previous_headings":"","what":"ComplementDNASeq 0.1.0","title":"ComplementDNASeq 0.1.0","text":"Added reverse_complement() utility input validation normalisation. Introduced testthat infrastructure unit coverage reverse complement helper. Updated package metadata, README, supporting files active development.","code":""}]
